<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="K~%qnxQ`wF*lJM`nlck." x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="s|$C-:80z-,8^g{bV`F6"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace alarmStopwatch {" line1="    let stop_watch_time = 0" line2="    let inputted_alarm_time = 0" line3="    let stopwatch_on = false" line4="    let on = false" line5="    let off = true" line6="    let on_1 = false" line7="    let off_1 = true" line8="    let amari_1 = false" line9="" line10="    // Initialize clock" line11="    Clock.clockSpeed(1000)" line12="    Clock.clockToggle(true)" line13="" line14="    // Toggle stopwatch on button B" line15="    export function toggleStopwatch() {" line16="        if (!off) {" line17="            if (on) {" line18="                stopwatch_on = true" line19="                off = true" line20="                on = false" line21="            }" line22="        } else {" line23="            if (!on) {" line24="                stopwatch_on = false" line25="                on = true" line26="                off = false" line27="            }" line28="        }" line29="    }" line30="" line31="    // Set alarm time from input (simulate button A)" line32="    export function setAlarmTime(seconds: number) {" line33="        inputted_alarm_time = seconds" line34="        on_1 = true" line35="        off_1 = false" line36="        amari_1 = true" line37="        timer.after(inputted_alarm_time * 1000, function () {" line38="            music.play(music.createSong(hex`006400040803...`), music.PlaybackMode.UntilDone)" line39="        })" line40="    }" line41="" line42="    // Reset everything (simulate MENU button)" line43="    export function resetAll() {" line44="        stop_watch_time = 0" line45="        inputted_alarm_time = 0" line46="    }" line47="" line48="    // Start update loops (should be called in main.ts)" line49="    export function startLoops() {" line50="        forever(function () {" line51="            pause(125)" line52="            let textSprite1 = textsprite.create(convertToText(inputted_alarm_time))" line53="            textSprite1.setPosition(80, 50)" line54="            let textSprite2 = textsprite.create(convertToText(stop_watch_time))" line55="            textSprite2.setPosition(80, 80)" line56="            pause(125)" line57="            sprites.destroy(textSprite1)" line58="            sprites.destroy(textSprite2)" line59="        })" line60="" line61="        forever(function () {" line62="            if (!off_1 &amp;&amp; on_1) {" line63="                pause(1000)" line64="                inputted_alarm_time -= 1" line65="            }" line66="        })" line67="" line68="        forever(function () {" line69="            pause(500)" line70="            let clockText = textsprite.create(Clock.clockTime(true))" line71="            clockText.setPosition(80, 20)" line72="            pause(500)" line73="            sprites.destroy(clockText)" line74="        })" line75="" line76="        forever(function () {" line77="            pause(1000)" line78="            if (stopwatch_on) {" line79="                stop_watch_time += 1" line80="            }" line81="        })" line82="" line83="        forever(function () {" line84="            if (inputted_alarm_time &lt;= 0) {" line85="                inputted_alarm_time = 0" line86="                off_1 = true" line87="                on_1 = false" line88="            }" line89="        })" line90="    }" line91="}" numlines="92"></mutation></block></statement></block></xml>